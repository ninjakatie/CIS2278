package hw1;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class Person {
	String firstName;
	String lastName;
	Date birthdate;
	List<Dog> dogs = new ArrayList<Dog>();
	Address address;
	
	public Person(String firstName, String lastName, Date birthdate, List<Dog> dogs, Address address) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.birthdate = birthdate;
		this.dogs = dogs;
		this.address = address;
	}
	
	public Person() {
		
	}
	
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public Date getBirthdate() {
		return birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	public List<Dog> getDogs() {
		return dogs;
	}

	public void setDogs(List<Dog> dogs) {
		this.dogs = dogs;
	}

	public Address getAddress() {
		return address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}
//computing the age of the person, by first finding their birth date from their first and last name. 
	public int getAge() {
		int age = 0;
		Calendar today = Calendar.getInstance();
		Calendar birthday = new GregorianCalendar();
		
		birthday.setTime(birthdate);
		int yearDiff = today.get(Calendar.YEAR) - birthday.get(Calendar.YEAR);
		if (today.get(Calendar.MONTH) < birthday.get(Calendar.MONTH)) {
	          yearDiff = yearDiff - 1;}
	    else if (today.get(Calendar.MONTH) == birthday.get(Calendar.MONTH) &&
	            today.get(Calendar.DATE) < birthday.get(Calendar.DATE) ) {
	          yearDiff = yearDiff - 1;
	      }
	    	age = yearDiff;
	    	
		System.out.println(age);
		return age;
	}
	
	public void addDog(String name, String breed, int age) {
		Dog newDog = new Dog(name, breed, age);
		dogs.add(newDog);
		System.out.println(dogs);
	}
	
	public void removeDog(String nameToSearch) {
		for (Dog d: dogs) {
			if (d.name.equals(nameToSearch)) {
				dogs.remove(dogs);
			}
		}
	
	}
}

